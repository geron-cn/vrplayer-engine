
#ifndef _JNIHELPER_H_
#define _JNIHELPER_H_
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_vrlive_vrlib_common_JNIHelper */

#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_vrlive_vrlib_common_JNIHelper
 * Method:    initClearEvent
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_initClearEvent
  (JNIEnv *, jobject);

/*
 * Class:     com_vrlive_vrlib_common_JNIHelper
 * Method:    renderOndraw
 * Signature: ([FI)V
 */
JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_renderOndraw
  (JNIEnv *, jobject, jfloatArray);

/*
 * Class:     com_vrlive_vrlib_common_JNIHelper
 * Method:    renderOnChanged
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_renderOnChanged
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_vrlive_vrlib_common_JNIHelper
 * Method:    initRenderScene
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_initRenderScene
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_vrlive_vrlib_common_JNIHelper
 * Method:    checkEvent
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_vrlive_vrlib_common_JNIHelper_checkEvent
  (JNIEnv *, jobject);

/*
 * Class:     com_vrlive_vrlib_common_JNIHelper
 * Method:    initClearRender
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_initClearRender
  (JNIEnv *, jobject);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_setRenderMenuShow
  (JNIEnv *, jclass, jboolean);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_set2DCameraRotaion
  (JNIEnv *, jclass, jfloat);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_createMenuItem
  (JNIEnv *, jclass, jstring, jstring, jfloat, jfloat, jfloat, jfloat);

  JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_setRenderCustomMenuShow
  (JNIEnv *, jclass, jboolean);

  JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_setCursorShow
  (JNIEnv *, jclass, jboolean);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_removeMenuItem
  (JNIEnv *, jclass, jstring);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_removeLabel
  (JNIEnv *, jclass, jstring);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_loadNode
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_vrlive_vrlib_common_JNIHelper
 * Method:    setAssetManager
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_setAssetManager
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_vrlive_vrlib_common_JNIHelper
 * Method:    setThreadJsetMethodInfoNIEnv
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_init
  (JNIEnv *, jclass, jobject activityIns);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_nativeInitBitmapDC
  (JNIEnv* , jclass, jint, jint , jbyteArray pixels);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_sendMessage
  (JNIEnv* , jclass, jfloat startX, jfloat startY, jfloat targetX, jfloat targetY,
                                          jint width, jint height, jint speed, jbyteArray pixels);

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_sendSequnceFrames
  (JNIEnv* , jclass, jstring framesDir, jint startIndex, jint frameCount,
          jfloat startX, jfloat startY, jfloat targetX, jfloat targetY, jint duration );

JNIEXPORT void JNICALL Java_com_vrlive_vrlib_common_JNIHelper_sendSpriteAnimate
  (JNIEnv* , jclass, jstring spritePath, jfloat startX, jfloat startY,
            jfloat targetX, jfloat targetY, jint duration, jboolean fradeInOut);


JNIEXPORT jint JNI_OnLoad(JavaVM* vm, void *reserved);

//void initLoaders(JavaVM* vm);

namespace vrlive{
struct JniMethodInfo;
}
bool getStaticMethodInfo(vrlive::JniMethodInfo &methodinfo,
                              const char *className,
                              const char *methodName,
                              const char *paramCode);
#ifdef __cplusplus
}
#endif

#endif //_JNIHELPER_H_
